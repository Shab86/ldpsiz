.TH "jobqueue.c" 3 "Sat Jun 6 2015" "Version 0.1" "ldpsiz" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jobqueue.c \- 
.PP
Multithreaded job queue\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include 'misc\&.h'\fP
.br
\fC#include 'jobqueue\&.h'\fP
.br
\fC#include 'dprintf\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBJob\fP"
.br
.RI "\fIA single job in the queue\&. \fP"
.ti -1c
.RI "struct \fBJobQueue\fP"
.br
.RI "\fIAll data used by job queue\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBthreadfun\fP (void *vjq)"
.br
.RI "\fIWaits until there is a job in the queue, pops it off and executes it, then waits for another\&. \fP"
.ti -1c
.RI "void \fBJob_free\fP (\fBJob\fP *job)"
.br
.ti -1c
.RI "\fBJobQueue\fP * \fBJobQueue_new\fP (int nthreads)"
.br
.ti -1c
.RI "void \fBJobQueue_addJob\fP (\fBJobQueue\fP *jq, int(*jobfun)(void *), void *param)"
.br
.ti -1c
.RI "void \fBJobQueue_waitOnJobs\fP (\fBJobQueue\fP *jq)"
.br
.RI "\fIWait until jobs are completed\&. \fP"
.ti -1c
.RI "void \fBJobQueue_free\fP (\fBJobQueue\fP *jq)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Multithreaded job queue\&. 

\fBAuthor:\fP
.RS 4
Alan R\&. Rogers This file implements a multithreaded job queue\&. Jobs are pushed onto a queue by the main program\&. Each thread (or worker) removes a job from the queue, executes it, and then goes back for another\&. When all jobs are finished, control returns to the main function\&.
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (c) 2014, Alan R\&. Rogers <rogers@anthro.utah.edu>\&. This file is released under the Internet Systems Consortium License, which can be found in file 'LICENSE'\&. 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void* \fBthreadfun\fP (void *vjq)"
.PP
Waits until there is a job in the queue, pops it off and executes it, then waits for another\&. Runs until jobs are completed and main thread sets acceptingJobs=0\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for ldpsiz from the source code\&.
