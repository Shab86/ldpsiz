.TH "eld.c" 3 "Wed May 28 2014" "Version 0.1" "ldpsiz" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eld.c \- 
.PP
Estimate LD from genetic data\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <getopt\&.h>\fP
.br
\fC#include <limits\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include <gsl/gsl_rng\&.h>\fP
.br
\fC#include 'typedefs\&.h'\fP
.br
\fC#include 'misc\&.h'\fP
.br
\fC#include 'readgtp\&.h'\fP
.br
\fC#include 'fileindex\&.h'\fP
.br
\fC#include 'tabulation\&.h'\fP
.br
\fC#include 'window\&.h'\fP
.br
\fC#include 'boot\&.h'\fP
.br
\fC#include 'assign\&.h'\fP
.br
\fC#include 'ini\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBThreadArg\fP"
.br
.RI "\fIData required by a single thread\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fBusage\fP (void)"
.br
.RI "\fIPrint usage message and abort\&. \fP"
.ti -1c
.RI "void \fBThreadArg_print\fP (\fBThreadArg\fP *targ, FILE *ofp)"
.br
.RI "\fIPrint \fBThreadArg\fP object\&. \fP"
.ti -1c
.RI "void * \fBthreadfun\fP (void *varg)"
.br
.RI "\fI`eld` runs a copy of this function within each thread\&. \fP"
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Estimate LD from genetic data\&. 

`eld`, a program that estimates LD from genetic data ==================================================================
.PP
Parameter values, including those describing population history, may be read either from the initialization file `ldpsiz\&.ini` or specified on the command line\&. Command-line arguments override values in the initialization file\&.
.PP
`eld` reads data in 'gtp' format and estimates two measures of LD: $\hat\sigma_d^2$ and $r^2$\&. The program compares all pairs of sites within a window that slides across the data set\&. These pairs are tabulated into bins based on the distance (in cM) that separates them\&. For each bin, the program estimates and prints the two measures of LD\&. The maximal separation between pairs of SNPs is determined by the `--window` (or `-w`) option\&.
.PP
Optionally, the program calculates a moving-blocks bootstrap for $\hat\sigma_d^2$\&. To turn on this option, use the `--bootreps` option discussed below\&. The program will then print lower and upper confidence limits along with each estimate of $\hat\sigma_d^2$\&. By default, the bootstrap includes 95% of the sampling distribution distribution\&. This fraction can be modified using the initialization file\&. Optionally, the bootstrap may be stored in a separate file for use by other programs\&. To accomplish this, use the command-line option `--bootfile` or set `bootfile` in `ldpsiz\&.ini`\&.
.PP
By default, the program uses as many threads as there are cores on the machine\&. To change this, use the command-line option `--threads` or set `nthreads` in the file `ldpsiz\&.ini`\&.
.PP
usage: eld [options] input_file_name where options may include: -b <x> or --blocksize <x> SNPs per bootstrap block -f <x> or --bootfile <x> name of bootstrap output file -h or --help print this message -i <x> or --interval <x> for debugging: increase speed by examining every x'th focal \fBSNP\fP -n <x> or --nbins <x> tablulate values into x bins -r <x> or --bootreps <x> number of bootstrap replicates (def: 0) -t <x> or --threads <x> number of threads (default is auto) -v or --verbose more output -w <x> or --window <x> window size in cM
.PP
\fBCopyright:\fP
.RS 4
Copyright (c) 2014, Alan R\&. Rogers <rogers@anthro.utah.edu>\&. This file is released under the Internet Systems Consortium License, which can be found in file 'LICENSE'\&. 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void * \fBthreadfun\fP (void *vjq)"
.PP
`eld` runs a copy of this function within each thread\&. Waits until there is a job in the queue, pops it off and executes it, then waits for another\&.
.PP
The function opens the input file, which gives the thread its own input buffer so that it can move around in the file without locking it\&. Then it examines pairs of SNPs within a window that slides across the SNPs it is responsible for, placing the results into an object of type \fBTabulation\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIvarg\fP A void pointer to an object of type \fBThreadArg\fP\&.
.RE
.PP
Runs until jobs are completed and main thread sets acceptingJobs=0\&. 
.PP
References ThreadArg::boot, ThreadArg::ifname, ThreadArg::nGtype, ThreadArg::overflow, ThreadArg::ploidy, ThreadArg::sampling_interval, ThreadArg::tab, ThreadArg::tb, ThreadBounds_ndx_1stFocal(), ThreadBounds_ndx_initial(), ThreadBounds_ndx_lastFocal(), ThreadBounds_seekpos_initial(), Window_advance(), ThreadArg::window_cm, Window_free(), Window_new(), Window_nextSNP(), and Window_nGtype()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ldpsiz from the source code\&.
