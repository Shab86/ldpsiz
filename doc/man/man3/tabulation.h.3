.TH "tabulation.h" 3 "Sat Jun 6 2015" "Version 0.1" "ldpsiz" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tabulation.h \- 
.PP
Header for \fBtabulation\&.c\fP 
.PP
\fBCopyright:\fP
.RS 4
Copyright (c) 2014, Alan R\&. Rogers <rogers@anthro.utah.edu>\&. This file is released under the Internet Systems Consortium License, which can be found in file 'LICENSE'\&. 
.RE
.PP
 

.SH SYNOPSIS
.br
.PP
\fC#include 'typedefs\&.h'\fP
.br
\fC#include 'misc\&.h'\fP
.br
\fC#include 'array\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBTabulation\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBTabulation\fP * \fBTabulation_new\fP (double windowcm, int nbins)"
.br
.RI "\fIAllocate a new object of type \fBTabulation\fP\&. \fP"
.ti -1c
.RI "\fBTabulation\fP * \fBTabulation_dup\fP (\fBTabulation\fP *old)"
.br
.ti -1c
.RI "void \fBTabulation_free\fP (\fBTabulation\fP *tab)"
.br
.ti -1c
.RI "void \fBTabulation_plus_equals\fP (\fBTabulation\fP *x, const \fBTabulation\fP *y)"
.br
.ti -1c
.RI "void \fBTabulation_print\fP (\fBTabulation\fP *tab, FILE *ofp)"
.br
.ti -1c
.RI "int \fBTabulation_report\fP (\fBTabulation\fP *tab, \fBDblArray\fP *sep_cm, \fBULIntArray\fP *nobs, \fBDblArray\fP *sigdsq, \fBDblArray\fP *rsq)"
.br
.ti -1c
.RI "double \fBTabulation_sigdsq\fP (\fBTabulation\fP *tab, int bin, double *sep_cm, long unsigned *nobs)"
.br
.ti -1c
.RI "double \fBTabulation_rsq\fP (\fBTabulation\fP *tab, int bin, double *sep_cm, long unsigned *nobs)"
.br
.ti -1c
.RI "double \fBTabulation_denom\fP (\fBTabulation\fP *tab, int bin, double *sep_cm, long unsigned *nobs)"
.br
.ti -1c
.RI "long unsigned \fBTabulation_rawCounts\fP (\fBTabulation\fP *tab, int bin, double *numerator, double *denominator, double *sumRsq, double *sep_cm)"
.br
.ti -1c
.RI "long unsigned \fBTabulation_nObs\fP (const \fBTabulation\fP *tab, int i)"
.br
.RI "\fIReturn the number of observations in the i'th bin\&. \fP"
.ti -1c
.RI "int \fBTabulation_equals\fP (const \fBTabulation\fP *x, const \fBTabulation\fP *y)"
.br
.ti -1c
.RI "void \fBTabulation_dump\fP (const \fBTabulation\fP *tab, FILE *ofp)"
.br
.ti -1c
.RI "\fBTabulation\fP * \fBTabulation_restore\fP (FILE *ifp)"
.br
.ti -1c
.RI "int \fBTabulation_isfinite\fP (const \fBTabulation\fP *tab)"
.br
.RI "\fIReturn 1 if tab is free of non-finite values, 0 otherwise\&. \fP"
.ti -1c
.RI "void \fBTabulation_sanityCheck\fP (\fBTabulation\fP *tab, const char *file, int line)"
.br
.ti -1c
.RI "int \fBTabulation_overflow\fP (\fBTabulation\fP *tab)"
.br
.RI "\fICheck for overflow\&. \fP"
.ti -1c
.RI "void \fBTabulation_test\fP (int verbose)"
.br
.ti -1c
.RI "static void \fBTabulation_record\fP (\fBTabulation\fP *tab, double Dsq, double pqpq, double sep_cm, unsigned wgt)"
.br
.ti -1c
.RI "static int \fBgetBin\fP (double sep_cm, double bins_per_cm)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Header for \fBtabulation\&.c\fP 
.PP
\fBCopyright:\fP
.RS 4
Copyright (c) 2014, Alan R\&. Rogers <rogers@anthro.utah.edu>\&. This file is released under the Internet Systems Consortium License, which can be found in file 'LICENSE'\&. 
.RE
.PP


\fBAuthor:\fP
.RS 4
Alan R\&. Rogers 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "\fBTabulation\fP* \fBTabulation_new\fP (doublewindowcm, intnbins)"
.PP
Allocate a new object of type \fBTabulation\fP\&. This is accomplished via a single call to malloc, so that the entire object will reside in contiguous memory\&. This minimizes page faults and should make time-critical functions such as Tabulation_record run faster\&.
.PP
\fBParameters:\fP
.RS 4
\fIwindowcm\fP The size in centimorgans of the window used to scan the genome\&.
.br
\fInbins\fP The number of bins in which to tabulate values\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A newly allocated object of type \fBTabulation\fP, which should be freed with Tabulation_free\&. 
.RE
.PP

.PP
Referenced by Boot_new()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ldpsiz from the source code\&.
