.TH "window.c" 3 "Sat Jun 6 2015" "Version 0.1" "ldpsiz" \" -*- nroff -*-
.ad l
.nh
.SH NAME
window.c \- 
.PP
A window that slides across the chromosome\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'window\&.h'\fP
.br
\fC#include 'readgtp\&.h'\fP
.br
\fC#include 'misc\&.h'\fP
.br
\fC#include 'tabulation\&.h'\fP
.br
\fC#include 'spectab\&.h'\fP
.br
\fC#include 'boot\&.h'\fP
.br
\fC#include 'sums\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <float\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include 'assign\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBWindow\fP"
.br
.RI "\fI\fBWindow\fP represents a window that slides across the chromosome\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBWindow\fP * \fBWindow_new\fP (double width_cm, FILE *ifp, long int sampling_interval, unsigned ploidy)"
.br
.RI "\fIAllocate a new \fBWindow\fP\&. \fP"
.ti -1c
.RI "void \fBWindow_free\fP (\fBWindow\fP *window)"
.br
.RI "\fIFree a \fBWindow\fP\&. \fP"
.ti -1c
.RI "\fBSNP\fP * \fBWindow_currSNP\fP (\fBWindow\fP *window)"
.br
.RI "\fIReturn pointer to current focal \fBSNP\fP\&. \fP"
.ti -1c
.RI "int \fBWindow_nextSNP\fP (\fBWindow\fP *window, \fBBoot\fP *boot)"
.br
.RI "\fIGet next \fBSNP\fP from input file and link it into the linked list pointed to by window->curr\&. \fP"
.ti -1c
.RI "int \fBWindow_advance\fP (\fBWindow\fP *window, \fBTabulation\fP *tab, \fBSpectab\fP *spectab, \fBBoot\fP *boot, long lineno)"
.br
.RI "\fIAdd a new \fBSNP\fP to the window\&. \fP"
.ti -1c
.RI "unsigned \fBWindow_nGtype\fP (const \fBWindow\fP *window)"
.br
.RI "\fIReturn window->nGtype\&. \fP"
.ti -1c
.RI "unsigned \fBWindow_ploidy\fP (const \fBWindow\fP *window)"
.br
.RI "\fIReturn window->ploidy\&. \fP"
.ti -1c
.RI "long \fBWindow_nSNPsRead\fP (const \fBWindow\fP *window)"
.br
.RI "\fIReturn the number of SNPs that have been read\&. \fP"
.ti -1c
.RI "void \fBWindow_test\fP (int verbose)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A window that slides across the chromosome\&. 

\fBAuthor:\fP
.RS 4
Alan R\&. Rogers LD is calculated from pairs of sites within a window, which slides across the chromosome\&. This file implements \fBWindow\fP, which represents that sliding window\&.
.RE
.PP
\fBCopyright:\fP
.RS 4
Copyright (c) 2014, Alan R\&. Rogers <rogers@anthro.utah.edu>\&. This file is released under the Internet Systems Consortium License, which can be found in file 'LICENSE'\&. 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int \fBWindow_advance\fP (\fBWindow\fP *window, \fBTabulation\fP *tab, \fBSpectab\fP *spectab, \fBBoot\fP *boot, longlineno)"
.PP
Add a new \fBSNP\fP to the window\&. Estimate the linkage disequilibrium (LD) between single nucleotide polymorphisms (SNPs) as a function of the map distance between those SNPs\&. 
.PP
References Boot_addAlleleCount(), Window::curr, Dbl_near(), Window::ploidy, Window::sampling_interval, SNP_countMinor(), SNP_getDsq(), SNPstore_checkin(), Window::store, Window::width_cm, and Window_nextSNP()\&.
.SS "\fBWindow\fP* \fBWindow_new\fP (doublewidth_cm, FILE *ifp, long intsampling_interval, unsignedploidy)"
.PP
Allocate a new \fBWindow\fP\&. \fBParameters:\fP
.RS 4
\fIwidth_cm\fP width of \fBWindow\fP in centimorgans
.br
\fIsampling_interval\fP If sampling_interval is 2, window will skip every other \fBSNP\fP\&. This makes things fast for debugging\&.
.br
\fIploidy\fP 1 for haploid, 2 for diploid 
.RE
.PP

.PP
References Window::curr, Window::ifp, Window::nGtype, Window::nSNPs, Window::ploidy, Window::sampling_interval, Window::store, and Window::width_cm\&.
.SS "int \fBWindow_nextSNP\fP (\fBWindow\fP *window, \fBBoot\fP *boot)"
.PP
Get next \fBSNP\fP from input file and link it into the linked list pointed to by window->curr\&. Return 0 on success, EOF if end of file is reached, and 1 on any other error\&. 
.PP
References Window::curr, Dbl_near(), Gtp_readSNP(), Window::gtype, Window::ifp, Window::nGtype, Window::nSNPs, Window::ploidy, SNP_set(), SNP_show(), SNPstore_checkout(), SNPstore_new(), and Window::store\&.
.SS "unsigned \fBWindow_nGtype\fP (const \fBWindow\fP *window)"
.PP
Return window->nGtype\&. Return current value of window->nGtype\&. 
.PP
References Window::nGtype\&.
.SS "long \fBWindow_nSNPsRead\fP (const \fBWindow\fP *window)"
.PP
Return the number of SNPs that have been read\&. 
.PP
References Window::nSNPs\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ldpsiz from the source code\&.
